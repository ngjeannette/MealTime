{"version":3,"sources":["Espresso-Lungo.mp4","Map.js","Yelp.js","ShowTime.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Coordinate","_ref","text","react_default","a","createElement","style","color","background","padding","display","font-size","textAlign","alignItems","justifyContent","borderRadius","transform","SimpleMap","Fragment","className","height","width","lib_default","bootstrapURLKeys","key","center","this","props","defaultZoom","zoom","Map_Coordinate","lat","lng","index_es","icon","faUtensils","React","Component","defaultProps","Yelp","state","selectedCategory","handleChangeSelectCategory","event","_this","setState","target","value","_this2","selection","length","faFilter","size","onChange","id","concat","Object","toConsumableArray","reduce","categories","business","forEach","category","includes","title","push","sort","map","categoryTitle","filter","item","src","image_url","alt","alias","name","location","address1","city","zip_code","country","Map","coordinates","latitude","longitude","ShowTime","timeStamp","time","About","faLocationArrow","class","faChevronDown","onClick","scroll","getSuggestionValue","suggestion","renderSuggestion","replace","data","Africa","America","Antarctica","Arctic","Asia","Atlantic","Australia","Brazil","Canada","Chile","Etc","Europe","Indian","Mexico","Pacific","US","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","persons","continent","selectedContinent","citySearch","suggestions","getSuggestions","inputValue","trim","toLowerCase","inputLength","slice","onSuggestionsFetchRequested","onSuggestionsClearRequested","Date","toLocaleString","timeZone","hour12","weekday","month","day","hour","minute","handleChange","console","log","_ref2","newValue","handleChangeSelect","handleSubmit","e","preventDefault","getSelectionfromApi","getTime","x","yy","match","yyy","Number","meal","axios","get","headers","Authorization","params","then","res","businesses","getCoordinates","searchResultsRef","current","scrollIntoView","block","behavior","catch","err","y","searchPage","createRef","_this$state","inputProps","placeholder","muted","autoPlay","loop","video","About_About","ref","action","keys","dist_default","shouldRenderSuggestions","type","disabled","ShowTime_ShowTime","Yelp_Yelp","lats","Boolean","window","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6SCMlCC,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACjBC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLC,MAAO,QACPC,WAAY,MACZC,QAAS,OACTC,QAAS,cACTC,YAAa,OACbC,UAAW,SACXC,WAAY,SACZC,eAAgB,SAChBC,aAAc,OACdC,UAAW,0BAGZd,IAICe,mLAKF,OACEd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,OAEEc,UAAU,WACVb,MAAO,CAAEc,OAAQ,QAASC,MAAO,SAEjClB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,iBAAkB,CAChBC,IAAK,2CAEPC,OAAQC,KAAKC,MAAMF,OACnBG,YAAaF,KAAKC,MAAME,MAExB1B,EAAAC,EAAAC,cAACyB,EAAD,CACEC,IAAKL,KAAKC,MAAMI,IAChBC,IAAKN,KAAKC,MAAMK,IAChB9B,KAAKC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAiBC,KAAMC,kBAtBlBC,IAAMC,WAAxBpB,EACGqB,aAAe,CACpBT,KAAM,IA4BKZ,QC7CMsB,6MACnBC,MAAQ,CACNC,iBAAkB,SAGpBC,2BAA6B,SAAAC,GAC3BC,EAAKC,SAAS,CAAEJ,iBAAkBE,EAAMG,OAAOC,iFAExC,IAAAC,EAAAtB,KACP,OACEA,KAAKC,MAAMsB,UAAUC,OAAS,GAC5B/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,oBACbhB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAiBC,KAAMiB,IAAUC,KAAK,KAAK7C,MAAM,UACjDJ,EAAAC,EAAAC,cAAA,UACEgD,SAAU3B,KAAKgB,2BACfK,MAAOrB,KAAKc,MAAMC,iBAClBtB,UAAU,gCACVmC,GAAG,mBAEF,CACC,OADDC,OAAAC,OAAAC,EAAA,EAAAD,CAEI9B,KAAKC,MAAMsB,UACXS,OAAO,SAACC,EAAYC,GAOnB,OANAA,EAASD,WAAWE,QAAQ,SAAAC,GACrBH,EAAWI,SAASD,EAASE,QAChCL,EAAWM,KAAKH,EAASE,SAItBL,GACN,IACFO,SACHC,IAAI,SAAAC,GAEJ,OACEjE,EAAAC,EAAAC,cAAA,UACE0C,MAAOqB,EACPjD,UAAU,6BAETiD,OAMXjE,EAAAC,EAAAC,cAAA,MAAIiD,GAAG,iBACJ5B,KAAKC,MAAMsB,UACToB,OACC,SAAAC,GAAI,MAC8B,QAAhCtB,EAAKR,MAAMC,kBACX6B,EAAKX,WACFQ,IAAI,SAAAL,GAAQ,OAAIA,EAASE,QACzBD,SAASf,EAAKR,MAAMC,oBAE1B0B,IAAI,SAAAG,GACH,OACEnE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aAAaK,IAAK8C,EAAKhB,IACpCnD,EAAAC,EAAAC,cAAA,OAAKc,UAAU,sCACbhB,EAAAC,EAAAC,cAAA,OAAKkE,IAAKD,EAAKE,UAAWC,IAAKH,EAAKI,QACpCvE,EAAAC,EAAAC,cAAA,OAAKc,UAAU,eACbhB,EAAAC,EAAAC,cAAA,cAAMiE,EAAKK,KAAX,KADF,yBAAApB,OAGFe,EAAKM,SAASC,SAHZ,0BAAAtB,OAIFe,EAAKM,SAASE,KAJZ,0BAAAvB,OAKFe,EAAKM,SAASpC,MALZ,0BAAAe,OAMFe,EAAKM,SAASG,SANZ,0BAAAxB,OAOFe,EAAKM,SAASI,UAEZ7E,EAAAC,EAAAC,cAAC4E,EAAD,CACElD,IAAKuC,EAAKY,YAAYC,SACtBnD,IAAKsC,EAAKY,YAAYE,UACtB3D,OAAQ,CACNM,IAAKuC,EAAKY,YAAYC,SACtBnD,IAAKsC,EAAKY,YAAYE,WAExBN,KAAMR,EAAKM,SAASE,qBA7EZ1C,IAAMC,WCPnBgD,mLAEjB,OACE3D,KAAKC,MAAMmD,KAAK5B,OAAS,GACvB/C,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACbhB,EAAAC,EAAAC,cAAA,UACGqB,KAAKC,MAAMmD,KADd,KACsBpD,KAAKC,MAAM2D,WAEjCnF,EAAAC,EAAAC,cAAA,kBAAUqB,KAAKC,MAAM4D,KAArB,kBAR4BnD,IAAMC,WCIvBmD,mLAEjB,OACErF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACbhB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACbhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,UACbhB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAiBC,KAAMuD,IAAiBrC,KAAK,KAAK7C,MAAM,aAE1DJ,EAAAC,EAAAC,cAAA,OAAKqF,MAAM,OACXvF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,UACbhB,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAiBC,KAAMC,IAAYiB,KAAK,KAAK7C,MAAM,cAGvDJ,EAAAC,EAAAC,cAAA,OAAKc,UAAU,mBACbhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,UACbhB,EAAAC,EAAAC,cAAA,qLAKAF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEC,KAAMyD,IACNvC,KAAK,KACL7C,MAAM,UACNqF,QAASlE,KAAKC,MAAMkE,mBA3BCzD,IAAMC,4BCKnCyD,EAAqB,SAAAC,GAAU,OAAIA,GAEnCC,EAAmB,SAAAD,GAAU,OACjC5F,EAAAC,EAAAC,cAAA,eAAO0F,EAAWE,QAAQ,MAAO,KAAjC,MAGIC,EAAO,CACXC,OAAQ,CACN,UACA,QACA,cACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,cACA,YACA,QACA,aACA,QACA,UACA,QACA,gBACA,WACA,SACA,WACA,WACA,WACA,SACA,eACA,OACA,UACA,WACA,SACA,WACA,QACA,aACA,OACA,SACA,aACA,SACA,SACA,SACA,SACA,UACA,YACA,WACA,UACA,WACA,SACA,aACA,cACA,aACA,WACA,WACA,UACA,QACA,YAEFC,QAAS,CACP,OACA,YACA,WACA,UACA,YACA,yBACA,sBACA,2BACA,oBACA,kBACA,qBACA,oBACA,yBACA,kBACA,qBACA,qBACA,oBACA,oBACA,QACA,WACA,WACA,OACA,QACA,iBACA,WACA,QACA,SACA,eACA,YACA,SACA,QACA,eACA,gBACA,eACA,SACA,UACA,YACA,UACA,SACA,UACA,YACA,gBACA,UACA,aACA,UACA,SACA,UACA,eACA,SACA,eACA,SACA,UACA,WACA,WACA,WACA,cACA,WACA,cACA,aACA,YACA,YACA,UACA,YACA,aACA,UACA,aACA,YACA,YACA,SACA,UACA,SACA,aACA,uBACA,eACA,kBACA,qBACA,oBACA,gBACA,oBACA,kBACA,eACA,SACA,UACA,UACA,QACA,SACA,sBACA,sBACA,UACA,aACA,SACA,OACA,cACA,aACA,gBACA,SACA,UACA,SACA,UACA,aACA,YACA,WACA,UACA,YACA,SACA,aACA,cACA,WACA,UACA,YACA,aACA,WACA,aACA,SACA,WACA,UACA,OACA,UACA,sBACA,sBACA,yBACA,UACA,SACA,cACA,aACA,UACA,gBACA,iBACA,aACA,cACA,cACA,eACA,cACA,eACA,SACA,SACA,WACA,aACA,UACA,eACA,WACA,WACA,gBACA,YACA,eACA,WACA,QACA,gBACA,WACA,WACA,WACA,YACA,aACA,gBACA,cACA,QACA,cACA,UACA,UACA,UACA,YACA,SACA,aACA,WACA,UACA,eAEFC,WAAY,CACV,QACA,QACA,iBACA,YACA,SACA,UACA,SACA,UACA,aACA,QACA,QACA,UAEFC,OAAQ,CAAC,gBACTC,KAAM,CACJ,OACA,SACA,QACA,SACA,QACA,SACA,WACA,YACA,SACA,UACA,UACA,OACA,UACA,UACA,SACA,UACA,SACA,WACA,QACA,aACA,YACA,YACA,UACA,QACA,WACA,QACA,OACA,QACA,WACA,YACA,OACA,SACA,SACA,cACA,YACA,OACA,UACA,WACA,UACA,WACA,YACA,QACA,YACA,UACA,UACA,YACA,WACA,WACA,UACA,cACA,eACA,UACA,SACA,QACA,QACA,UACA,WACA,SACA,SACA,eACA,cACA,OACA,OACA,aACA,YACA,YACA,QACA,YACA,UACA,SACA,SACA,WACA,YACA,QACA,WACA,YACA,gBACA,SACA,WACA,UACA,SACA,WACA,SACA,UACA,QACA,QACA,gBACA,cACA,aACA,SACA,WACA,YACA,cACA,UACA,SACA,gBACA,UACA,WAEFC,SAAU,CACR,SACA,UACA,SACA,aACA,SACA,QACA,YACA,UACA,YACA,gBACA,YACA,WAEFC,UAAW,CACT,MACA,WACA,WACA,cACA,WACA,SACA,SACA,QACA,SACA,MACA,WACA,YACA,YACA,QACA,MACA,QACA,aACA,QACA,SACA,WACA,WACA,OACA,cAEFC,OAAQ,CAAC,OAAQ,YAAa,OAAQ,QACtCC,OAAQ,CACN,WACA,UACA,UACA,WACA,eACA,UACA,eACA,SAEFC,MAAO,CAAC,cAAe,gBACvBC,IAAK,CACH,MACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,YACA,MACA,YACA,MACA,QAEFC,OAAQ,CACN,YACA,UACA,YACA,SACA,UACA,WACA,SACA,aACA,WACA,YACA,WACA,WACA,WACA,aACA,SACA,YACA,WACA,WACA,cACA,WACA,SACA,cACA,OACA,QACA,SACA,YACA,SACA,aACA,SACA,QACA,YACA,QACA,SACA,SACA,OACA,QACA,YACA,SACA,OACA,OACA,SACA,aACA,WACA,UACA,aACA,SACA,QACA,YACA,UACA,SACA,WACA,YACA,WACA,QACA,UACA,SACA,UACA,YACA,SACA,SACA,aACA,UAEFC,OAAQ,CACN,eACA,SACA,YACA,QACA,SACA,YACA,OACA,WACA,YACA,UACA,WAEFC,OAAQ,CAAC,YAAa,UAAW,WACjCC,QAAS,CACP,OACA,WACA,eACA,UACA,QACA,SACA,QACA,YACA,UACA,OACA,WACA,YACA,UACA,cACA,OACA,WACA,WACA,aACA,SACA,YACA,SACA,YACA,SACA,QACA,OACA,UACA,SACA,YACA,QACA,WACA,UACA,SACA,eACA,YACA,SACA,QACA,SACA,SACA,YACA,OACA,OACA,SACA,OAEFC,GAAI,CACF,SACA,WACA,UACA,UAC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","file":"static/js/main.a30a08e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Espresso-Lungo.aab78f87.mp4\";","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\n\nconst Coordinate = ({ text }) => (\n  <div\n    style={{\n      color: \"white\",\n      background: \"red\",\n      padding: \"10px\",\n      display: \"inline-flex\",\n      \"font-size\": \"1rem\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: \"100%\",\n      transform: \"translate(-50%, -50%)\"\n    }}\n  >\n    {text}\n  </div>\n);\n\nclass SimpleMap extends React.Component {\n  static defaultProps = {\n    zoom: 10\n  };\n  render() {\n    return (\n      <>\n        <div\n          // class=\"card-img-top  \"\n          className=\"mapImage\"\n          style={{ height: \"200px\", width: \"100%\" }}\n        >\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyBhxC0ajIe4Q3ZZHvPrycvvT0a4dGzl7hY\"\n            }}\n            center={this.props.center}\n            defaultZoom={this.props.zoom}\n          >\n            <Coordinate\n              lat={this.props.lat}\n              lng={this.props.lng}\n              text=<FontAwesomeIcon icon={faUtensils} />\n            />\n          </GoogleMapReact>\n        </div>\n      </>\n    );\n  }\n}\nexport default SimpleMap;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport SimpleMap from \"./Map\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilter } from \"@fortawesome/free-solid-svg-icons\";\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nexport default class Yelp extends React.Component {\n  state = {\n    selectedCategory: \"All\"\n  };\n\n  handleChangeSelectCategory = event => {\n    this.setState({ selectedCategory: event.target.value });\n  };\n  render() {\n    return (\n      this.props.selection.length > 0 && (\n        <>\n          <div className=\"container select\">\n            <FontAwesomeIcon icon={faFilter} size=\"2x\" color=\"black\" />\n            <select\n              onChange={this.handleChangeSelectCategory}\n              value={this.state.selectedCategory}\n              className=\"react-autosuggest__container \"\n              id=\"filterSelection\"\n            >\n              {[\n                \"All\",\n                ...this.props.selection\n                  .reduce((categories, business) => {\n                    business.categories.forEach(category => {\n                      if (!categories.includes(category.title)) {\n                        categories.push(category.title);\n                      }\n                    });\n\n                    return categories;\n                  }, [])\n                  .sort()\n              ].map(categoryTitle => {\n                //each category is place inside an option\n                return (\n                  <option\n                    value={categoryTitle}\n                    className=\"react-autosuggest__input \"\n                  >\n                    {categoryTitle}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <ul id=\"searchResults\">\n            {this.props.selection\n              .filter(\n                item =>\n                  this.state.selectedCategory === \"All\" ||\n                  item.categories\n                    .map(category => category.title)\n                    .includes(this.state.selectedCategory)\n              )\n              .map(item => {\n                return (\n                  <li>\n                    <div className=\"selections\" key={item.id}>\n                      <div className=\"container restaurant bg-light mb-3\">\n                        <img src={item.image_url} alt={item.alias} />\n                        <div className=\"information\">\n                          <h4> {item.name} </h4>\n                          {`\n                    ${item.location.address1}\n                    ${item.location.city}\n                    ${item.location.state}\n                    ${item.location.zip_code}\n                    ${item.location.country}`}\n                        </div>\n                        <SimpleMap\n                          lat={item.coordinates.latitude}\n                          lng={item.coordinates.longitude}\n                          center={{\n                            lat: item.coordinates.latitude,\n                            lng: item.coordinates.longitude\n                          }}\n                          city={item.location.city}\n                        />\n                      </div>\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </>\n      )\n    );\n  }\n}\n","import \"./App.css\";\nimport React, { Component } from \"react\";\n\nexport default class ShowTime extends React.Component {\n  render() {\n    return (\n      this.props.city.length > 0 && (\n        <div className=\" showTime\">\n          <h3>\n            {this.props.city}: {this.props.timeStamp}\n          </h3>\n          <h3>It's {this.props.time} time!</h3>\n        </div>\n      )\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUtensils,\n  faLocationArrow,\n  faChevronDown\n} from \"@fortawesome/free-solid-svg-icons\";\nexport default class About extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h2> About </h2>\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <h3> Select Location </h3>\n            <FontAwesomeIcon icon={faLocationArrow} size=\"5x\" color=\"#f09878\" />\n          </div>\n          <div class=\"vl\" />\n          <div className=\"col-sm\">\n            <h3> Find your meal </h3>\n            <FontAwesomeIcon icon={faUtensils} size=\"5x\" color=\"#f09878\" />\n          </div>\n        </div>\n        <div className=\"row description\">\n          <div className=\"col-sm\">\n            <h3>\n              Based on the location, MealTime finds the current local time and\n              suggests nearby restaurants for the appropriate meal time.\n              Timezones are from IANA Time Zone Database.\n            </h3>\n            <FontAwesomeIcon\n              icon={faChevronDown}\n              size=\"5x\"\n              color=\"#f09878\"\n              onClick={this.props.scroll}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Autosuggest from \"react-autosuggest\";\nimport Yelp from \"./Yelp\";\nimport ShowTime from \"./ShowTime\";\nimport About from \"./About\";\nimport video from \"./Espresso-Lungo.mp4\";\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => suggestion;\n\nconst renderSuggestion = suggestion => (\n  <div> {suggestion.replace(/_/gi, \" \")} </div>\n);\n\nconst data = {\n  Africa: [\n    \"Abidjan\",\n    \"Accra\",\n    \"Addis_Ababa\",\n    \"Algiers\",\n    \"Asmara\",\n    \"Bamako\",\n    \"Bangui\",\n    \"Banjul\",\n    \"Bissau\",\n    \"Blantyre\",\n    \"Brazzaville\",\n    \"Bujumbura\",\n    \"Cairo\",\n    \"Casablanca\",\n    \"Ceuta\",\n    \"Conakry\",\n    \"Dakar\",\n    \"Dar_es_Salaam\",\n    \"Djibouti\",\n    \"Douala\",\n    \"El_Aaiun\",\n    \"Freetown\",\n    \"Gaborone\",\n    \"Harare\",\n    \"Johannesburg\",\n    \"Juba\",\n    \"Kampala\",\n    \"Khartoum\",\n    \"Kigali\",\n    \"Kinshasa\",\n    \"Lagos\",\n    \"Libreville\",\n    \"Lome\",\n    \"Luanda\",\n    \"Lubumbashi\",\n    \"Lusaka\",\n    \"Malabo\",\n    \"Maputo\",\n    \"Maseru\",\n    \"Mbabane\",\n    \"Mogadishu\",\n    \"Monrovia\",\n    \"Nairobi\",\n    \"Ndjamena\",\n    \"Niamey\",\n    \"Nouakchott\",\n    \"Ouagadougou\",\n    \"Porto-Novo\",\n    \"Sao_Tome\",\n    \"Timbuktu\",\n    \"Tripoli\",\n    \"Tunis\",\n    \"Windhoek\"\n  ],\n  America: [\n    \"Adak\",\n    \"Anchorage\",\n    \"Anguilla\",\n    \"Antigua\",\n    \"Araguaina\",\n    \"Argentina/Buenos_Aires\",\n    \"Argentina/Catamarca\",\n    \"Argentina/ComodRivadavia\",\n    \"Argentina/Cordoba\",\n    \"Argentina/Jujuy\",\n    \"Argentina/La_Rioja\",\n    \"Argentina/Mendoza\",\n    \"Argentina/Rio_Gallegos\",\n    \"Argentina/Salta\",\n    \"Argentina/San_Juan\",\n    \"Argentina/San_Luis\",\n    \"Argentina/Tucuman\",\n    \"Argentina/Ushuaia\",\n    \"Aruba\",\n    \"Asuncion\",\n    \"Atikokan\",\n    \"Atka\",\n    \"Bahia\",\n    \"Bahia_Banderas\",\n    \"Barbados\",\n    \"Belem\",\n    \"Belize\",\n    \"Blanc-Sablon\",\n    \"Boa_Vista\",\n    \"Bogota\",\n    \"Boise\",\n    \"Buenos_Aires\",\n    \"Cambridge_Bay\",\n    \"Campo_Grande\",\n    \"Cancun\",\n    \"Caracas\",\n    \"Catamarca\",\n    \"Cayenne\",\n    \"Cayman\",\n    \"Chicago\",\n    \"Chihuahua\",\n    \"Coral_Harbour\",\n    \"Cordoba\",\n    \"Costa_Rica\",\n    \"Creston\",\n    \"Cuiaba\",\n    \"Curacao\",\n    \"Danmarkshavn\",\n    \"Dawson\",\n    \"Dawson_Creek\",\n    \"Denver\",\n    \"Detroit\",\n    \"Dominica\",\n    \"Edmonton\",\n    \"Eirunepe\",\n    \"El_Salvador\",\n    \"Ensenada\",\n    \"Fort_Nelson\",\n    \"Fort_Wayne\",\n    \"Fortaleza\",\n    \"Glace_Bay\",\n    \"Godthab\",\n    \"Goose_Bay\",\n    \"Grand_Turk\",\n    \"Grenada\",\n    \"Guadeloupe\",\n    \"Guatemala\",\n    \"Guayaquil\",\n    \"Guyana\",\n    \"Halifax\",\n    \"Havana\",\n    \"Hermosillo\",\n    \"Indiana/Indianapolis\",\n    \"Indiana/Knox\",\n    \"Indiana/Marengo\",\n    \"Indiana/Petersburg\",\n    \"Indiana/Tell_City\",\n    \"Indiana/Vevay\",\n    \"Indiana/Vincennes\",\n    \"Indiana/Winamac\",\n    \"Indianapolis\",\n    \"Inuvik\",\n    \"Iqaluit\",\n    \"Jamaica\",\n    \"Jujuy\",\n    \"Juneau\",\n    \"Kentucky/Louisville\",\n    \"Kentucky/Monticello\",\n    \"Knox_IN\",\n    \"Kralendijk\",\n    \"La_Paz\",\n    \"Lima\",\n    \"Los_Angeles\",\n    \"Louisville\",\n    \"Lower_Princes\",\n    \"Maceio\",\n    \"Managua\",\n    \"Manaus\",\n    \"Marigot\",\n    \"Martinique\",\n    \"Matamoros\",\n    \"Mazatlan\",\n    \"Mendoza\",\n    \"Menominee\",\n    \"Merida\",\n    \"Metlakatla\",\n    \"Mexico_City\",\n    \"Miquelon\",\n    \"Moncton\",\n    \"Monterrey\",\n    \"Montevideo\",\n    \"Montreal\",\n    \"Montserrat\",\n    \"Nassau\",\n    \"New_York\",\n    \"Nipigon\",\n    \"Nome\",\n    \"Noronha\",\n    \"North_Dakota/Beulah\",\n    \"North_Dakota/Center\",\n    \"North_Dakota/New_Salem\",\n    \"Ojinaga\",\n    \"Panama\",\n    \"Pangnirtung\",\n    \"Paramaribo\",\n    \"Phoenix\",\n    \"Port_of_Spain\",\n    \"Port-au-Prince\",\n    \"Porto_Acre\",\n    \"Porto_Velho\",\n    \"Puerto_Rico\",\n    \"Punta_Arenas\",\n    \"Rainy_River\",\n    \"Rankin_Inlet\",\n    \"Recife\",\n    \"Regina\",\n    \"Resolute\",\n    \"Rio_Branco\",\n    \"Rosario\",\n    \"Santa_Isabel\",\n    \"Santarem\",\n    \"Santiago\",\n    \"Santo_Domingo\",\n    \"Sao_Paulo\",\n    \"Scoresbysund\",\n    \"Shiprock\",\n    \"Sitka\",\n    \"St_Barthelemy\",\n    \"St_Johns\",\n    \"St_Kitts\",\n    \"St_Lucia\",\n    \"St_Thomas\",\n    \"St_Vincent\",\n    \"Swift_Current\",\n    \"Tegucigalpa\",\n    \"Thule\",\n    \"Thunder_Bay\",\n    \"Tijuana\",\n    \"Toronto\",\n    \"Tortola\",\n    \"Vancouver\",\n    \"Virgin\",\n    \"Whitehorse\",\n    \"Winnipeg\",\n    \"Yakutat\",\n    \"Yellowknife\"\n  ],\n  Antarctica: [\n    \"Casey\",\n    \"Davis\",\n    \"DumontDUrville\",\n    \"Macquarie\",\n    \"Mawson\",\n    \"McMurdo\",\n    \"Palmer\",\n    \"Rothera\",\n    \"South_Pole\",\n    \"Syowa\",\n    \"Troll\",\n    \"Vostok\"\n  ],\n  Arctic: [\"Longyearbyen\"],\n  Asia: [\n    \"Aden\",\n    \"Almaty\",\n    \"Amman\",\n    \"Anadyr\",\n    \"Aqtau\",\n    \"Aqtobe\",\n    \"Ashgabat\",\n    \"Ashkhabad\",\n    \"Atyrau\",\n    \"Baghdad\",\n    \"Bahrain\",\n    \"Baku\",\n    \"Bangkok\",\n    \"Barnaul\",\n    \"Beirut\",\n    \"Bishkek\",\n    \"Brunei\",\n    \"Calcutta\",\n    \"Chita\",\n    \"Choibalsan\",\n    \"Chongqing\",\n    \"Chungking\",\n    \"Colombo\",\n    \"Dacca\",\n    \"Damascus\",\n    \"Dhaka\",\n    \"Dili\",\n    \"Dubai\",\n    \"Dushanbe\",\n    \"Famagusta\",\n    \"Gaza\",\n    \"Harbin\",\n    \"Hebron\",\n    \"Ho_Chi_Minh\",\n    \"Hong_Kong\",\n    \"Hovd\",\n    \"Irkutsk\",\n    \"Istanbul\",\n    \"Jakarta\",\n    \"Jayapura\",\n    \"Jerusalem\",\n    \"Kabul\",\n    \"Kamchatka\",\n    \"Karachi\",\n    \"Kashgar\",\n    \"Kathmandu\",\n    \"Katmandu\",\n    \"Khandyga\",\n    \"Kolkata\",\n    \"Krasnoyarsk\",\n    \"Kuala_Lumpur\",\n    \"Kuching\",\n    \"Kuwait\",\n    \"Macao\",\n    \"Macau\",\n    \"Magadan\",\n    \"Makassar\",\n    \"Manila\",\n    \"Muscat\",\n    \"Novokuznetsk\",\n    \"Novosibirsk\",\n    \"Omsk\",\n    \"Oral\",\n    \"Phnom_Penh\",\n    \"Pontianak\",\n    \"Pyongyang\",\n    \"Qatar\",\n    \"Qyzylorda\",\n    \"Rangoon\",\n    \"Riyadh\",\n    \"Saigon\",\n    \"Sakhalin\",\n    \"Samarkand\",\n    \"Seoul\",\n    \"Shanghai\",\n    \"Singapore\",\n    \"Srednekolymsk\",\n    \"Taipei\",\n    \"Tashkent\",\n    \"Tbilisi\",\n    \"Tehran\",\n    \"Tel_Aviv\",\n    \"Thimbu\",\n    \"Thimphu\",\n    \"Tokyo\",\n    \"Tomsk\",\n    \"Ujung_Pandang\",\n    \"Ulaanbaatar\",\n    \"Ulan_Bator\",\n    \"Urumqi\",\n    \"Ust-Nera\",\n    \"Vientiane\",\n    \"Vladivostok\",\n    \"Yakutsk\",\n    \"Yangon\",\n    \"Yekaterinburg\",\n    \"Yerevan\",\n    \"Nicosia\"\n  ],\n  Atlantic: [\n    \"Azores\",\n    \"Bermuda\",\n    \"Canary\",\n    \"Cape_Verde\",\n    \"Faeroe\",\n    \"Faroe\",\n    \"Jan_Mayen\",\n    \"Madeira\",\n    \"Reykjavik\",\n    \"South_Georgia\",\n    \"St_Helena\",\n    \"Stanley\"\n  ],\n  Australia: [\n    \"ACT\",\n    \"Adelaide\",\n    \"Brisbane\",\n    \"Broken_Hill\",\n    \"Canberra\",\n    \"Currie\",\n    \"Darwin\",\n    \"Eucla\",\n    \"Hobart\",\n    \"LHI\",\n    \"Lindeman\",\n    \"Lord_Howe\",\n    \"Melbourne\",\n    \"North\",\n    \"NSW\",\n    \"Perth\",\n    \"Queensland\",\n    \"South\",\n    \"Sydney\",\n    \"Tasmania\",\n    \"Victoria\",\n    \"West\",\n    \"Yancowinna\"\n  ],\n  Brazil: [\"Acre\", \"DeNoronha\", \"East\", \"West\"],\n  Canada: [\n    \"Atlantic\",\n    \"Central\",\n    \"Eastern\",\n    \"Mountain\",\n    \"Newfoundland\",\n    \"Pacific\",\n    \"Saskatchewan\",\n    \"Yukon\"\n  ],\n  Chile: [\"Continental\", \"EasterIsland\"],\n  Etc: [\n    \"GMT\",\n    \"GMT+0\",\n    \"GMT+1\",\n    \"GMT+10\",\n    \"GMT+11\",\n    \"GMT+12\",\n    \"GMT+2\",\n    \"GMT+3\",\n    \"GMT+4\",\n    \"GMT+5\",\n    \"GMT+6\",\n    \"GMT+7\",\n    \"GMT+8\",\n    \"GMT+9\",\n    \"GMT0\",\n    \"GMT-0\",\n    \"GMT-1\",\n    \"GMT-10\",\n    \"GMT-11\",\n    \"GMT-12\",\n    \"GMT-13\",\n    \"GMT-14\",\n    \"GMT-2\",\n    \"GMT-3\",\n    \"GMT-4\",\n    \"GMT-5\",\n    \"GMT-6\",\n    \"GMT-7\",\n    \"GMT-8\",\n    \"GMT-9\",\n    \"Greenwich\",\n    \"UCT\",\n    \"Universal\",\n    \"UTC\",\n    \"Zulu\"\n  ],\n  Europe: [\n    \"Amsterdam\",\n    \"Andorra\",\n    \"Astrakhan\",\n    \"Athens\",\n    \"Belfast\",\n    \"Belgrade\",\n    \"Berlin\",\n    \"Bratislava\",\n    \"Brussels\",\n    \"Bucharest\",\n    \"Budapest\",\n    \"Busingen\",\n    \"Chisinau\",\n    \"Copenhagen\",\n    \"Dublin\",\n    \"Gibraltar\",\n    \"Guernsey\",\n    \"Helsinki\",\n    \"Isle_of_Man\",\n    \"Istanbul\",\n    \"Jersey\",\n    \"Kaliningrad\",\n    \"Kiev\",\n    \"Kirov\",\n    \"Lisbon\",\n    \"Ljubljana\",\n    \"London\",\n    \"Luxembourg\",\n    \"Madrid\",\n    \"Malta\",\n    \"Mariehamn\",\n    \"Minsk\",\n    \"Monaco\",\n    \"Moscow\",\n    \"Oslo\",\n    \"Paris\",\n    \"Podgorica\",\n    \"Prague\",\n    \"Riga\",\n    \"Rome\",\n    \"Samara\",\n    \"San_Marino\",\n    \"Sarajevo\",\n    \"Saratov\",\n    \"Simferopol\",\n    \"Skopje\",\n    \"Sofia\",\n    \"Stockholm\",\n    \"Tallinn\",\n    \"Tirane\",\n    \"Tiraspol\",\n    \"Ulyanovsk\",\n    \"Uzhgorod\",\n    \"Vaduz\",\n    \"Vatican\",\n    \"Vienna\",\n    \"Vilnius\",\n    \"Volgograd\",\n    \"Warsaw\",\n    \"Zagreb\",\n    \"Zaporozhye\",\n    \"Zurich\"\n  ],\n  Indian: [\n    \"Antananarivo\",\n    \"Chagos\",\n    \"Christmas\",\n    \"Cocos\",\n    \"Comoro\",\n    \"Kerguelen\",\n    \"Mahe\",\n    \"Maldives\",\n    \"Mauritius\",\n    \"Mayotte\",\n    \"Reunion\"\n  ],\n  Mexico: [\"BajaNorte\", \"BajaSur\", \"General\"],\n  Pacific: [\n    \"Apia\",\n    \"Auckland\",\n    \"Bougainville\",\n    \"Chatham\",\n    \"Chuuk\",\n    \"Easter\",\n    \"Efate\",\n    \"Enderbury\",\n    \"Fakaofo\",\n    \"Fiji\",\n    \"Funafuti\",\n    \"Galapagos\",\n    \"Gambier\",\n    \"Guadalcanal\",\n    \"Guam\",\n    \"Honolulu\",\n    \"Johnston\",\n    \"Kiritimati\",\n    \"Kosrae\",\n    \"Kwajalein\",\n    \"Majuro\",\n    \"Marquesas\",\n    \"Midway\",\n    \"Nauru\",\n    \"Niue\",\n    \"Norfolk\",\n    \"Noumea\",\n    \"Pago_Pago\",\n    \"Palau\",\n    \"Pitcairn\",\n    \"Pohnpei\",\n    \"Ponape\",\n    \"Port_Moresby\",\n    \"Rarotonga\",\n    \"Saipan\",\n    \"Samoa\",\n    \"Tahiti\",\n    \"Tarawa\",\n    \"Tongatapu\",\n    \"Truk\",\n    \"Wake\",\n    \"Wallis\",\n    \"Yap\"\n  ],\n  US: [\n    \"Alaska\",\n    \"Aleutian\",\n    \"Arizona\",\n    \"Central\",\n    \"Eastern\",\n    \"East-Indiana\",\n    \"Hawaii\",\n    \"Indiana-Starke\",\n    \"Michigan\",\n    \"Mountain\",\n    \"Pacific\",\n    \"Pacific-New\",\n    \"Samoa\"\n  ]\n};\n\nexport default class App extends React.Component {\n                 state = {\n                   persons: [],\n                   continent: \"America\",\n                   selectedContinent: \"America\",\n                   city: \"\",\n                   citySearch: \"\",\n                   data,\n                   suggestions: data[\"America\"],\n                   selection: [],\n                   lat: [],\n                   lng: [],\n                   center: {\n                     lat: [],\n                     lng: []\n                   },\n                   categories: [],\n                   time: \"\",\n                   timeStamp: \"\"\n                 };\n\n                 // Teach Autosuggest how to calculate suggestions for any given input value.\n                 getSuggestions = value => {\n                   const inputValue = value.trim().toLowerCase();\n                   const inputLength = inputValue.length;\n                   return inputLength === 0\n                     ? this.state.data[\n                         this.state.selectedContinent\n                       ]\n                     : this.state.data[\n                         this.state.selectedContinent\n                       ].filter(\n                         city =>\n                           city\n                             .toLowerCase()\n                             .slice(0, inputLength) ===\n                           inputValue\n                       );\n                 };\n\n                 // Autosuggest will call this function every time you need to update suggestions.\n                 // You already implemented this logic above, so just use it.\n                 onSuggestionsFetchRequested = ({ value }) => {\n                   this.setState({\n                     suggestions: this.getSuggestions(value)\n                   });\n                 };\n\n                 // Autosuggest will call this function every time you need to clear suggestions.\n                 onSuggestionsClearRequested = () => {\n                   this.setState({\n                     suggestions: []\n                   });\n                 };\n\n                 constructor(props) {\n                   super(props);\n                   this.searchResultsRef = React.createRef();\n                   this.searchPage = React.createRef();\n                 }\n\n                 //   componentDidMount() {\n                 //     axios\n                 //       .get(`https://api.openweathermap.org/data/2.5/weather`, {\n                 //         params: {\n                 //           APPID: \"0abf4bf351cec72355774d7f99ba0cc8\",\n                 //           id: \"524901\"\n                 //         }\n                 //       })\n                 //       .then(res => {\n                 //         const persons = res.data;\n                 //         this.setState({ persons });\n                 //       });\n\n                 //     // var dateWithouthSecond = new Date();\n                 //     // console.log(\n                 //     //   dateWithouthSecond.toLocaleTimeString(\"en-US\", {\n                 //     //     hour12: false\n                 //     //     // hour: \"2-digit\",\n                 //     //     // minute: \"2-digit\"\n                 //     //   })\n                 //     // );\n                 //   }\n\n                 timeStamp = (continent, city) => {\n                   let x = new Date().toLocaleString(\"en-US\", {\n                     timeZone: continent + \"/\" + city,\n                     hour12: false,\n                     weekday: \"long\",\n                     month: \"long\",\n                     day: \"numeric\",\n                     hour: \"2-digit\",\n                     minute: \"2-digit\"\n                   });\n                   // this.setState({ timeStamp: x });\n                   return x;\n                   // console.log(x);\n                 };\n\n                 handleChange = event => {\n                   this.setState({\n                     citySearch: event.target.value\n                   });\n                   console.log(event.target.value);\n                 };\n\n                 onChange = (event, { newValue }) => {\n                   console.log(\"newValue\", newValue);\n                   this.setState({\n                     citySearch: newValue\n                   });\n                 };\n\n                 handleChangeSelect = event => {\n                   console.log(\"hi\");\n                   console.log(\n                     \"event.target.value\",\n                     event.target.value\n                   );\n                   const value = event.target.value;\n                   this.setState(state => ({\n                     selectedContinent: value,\n                     suggestions: state.data[value]\n                   }));\n                 };\n\n                 handleSubmit = e => {\n                   console.log(\"ayy\");\n                   e.preventDefault();\n                   console.log(\"ayy\");\n\n                   this.setState(\n                     state => ({\n                       city: state.citySearch,\n                       continent: state.selectedContinent\n                     }),\n                     () => {\n                       console.log(\"api\", this.state.city);\n                       this.getSelectionfromApi(\n                         this.state.city,\n                         this.state.time\n                       );\n                     }\n                   );\n                 };\n\n                 getTime = () => {\n                   let x = this.timeStamp(\n                     this.state.continent,\n                     this.state.city\n                   );\n                   let y = x.match(\n                     /(?:[01]\\d|2[0123]):(?:[012345]\\d)/\n                   );\n                   let yy = y[0];\n                   let yyy = Number(yy.replace(\":\", \"\"));\n                   let time = \"\";\n                   if (yyy > 0o600 && yyy <= 1200) {\n                     time = \"Breakfast\";\n                   } else if (yyy > 1200 && yyy < 1700) {\n                     time = \"Lunch\";\n                   } else {\n                     time = \"Dinner\";\n                   }\n                   this.setState({ time: time, timeStamp: x });\n                 };\n\n                 getSelectionfromApi = (city, meal) => {\n                   axios\n                     .get(\n                       `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?location=` +\n                         city,\n                       {\n                         headers: {\n                           Authorization: `Bearer 6HpwezQbGeEEFr-zNNAbretclit-SFBBqV92zLarZ5hOAEmiL-In5gB2ty70Q7YQTRDROV7Oq3zFRxvyX8zeEWiQsj6DGQj2mtblF3ZHyHQk8g-Am3hdv3qG64Y_XHYx`\n                         },\n                         params: {\n                           categories: meal\n                         }\n                       }\n                     )\n                     .then(res => {\n                       console.log(res);\n                       let businesses = res.data.businesses;\n                       this.setState(\n                         { selection: businesses },\n                         () => {\n                           this.getTime();\n                           this.getCoordinates(businesses);\n                         }\n                       );\n                       this.searchResultsRef.current.scrollIntoView(\n                         {\n                           block: \"nearest\",\n                           behavior: \"smooth\"\n                         }\n                       );\n                     })\n                     .catch(err => {\n                       console.log(\"err\", err);\n                     });\n                 };\n\n                 getCoordinates = businesses => {\n                   let x = businesses.map(item => {\n                     let lat = item.coordinates.latitude;\n                     return lat;\n                   });\n                   let y = businesses.map(item => {\n                     let lng = item.coordinates.longitude;\n                     return lng;\n                   });\n                   this.setState(state => ({ lat: x, lng: y }));\n                 };\n\n                 scroll = () => {\n                   this.searchPage.current.scrollIntoView({\n                     block: \"nearest\",\n                     behavior: \"smooth\"\n                   });\n                 };\n\n                 render() {\n                   const {\n                     citySearch,\n                     suggestions\n                   } = this.state;\n                   // Autosuggest will pass through all these props to the input.\n                   const inputProps = {\n                     placeholder: \"Select an area\",\n                     value: citySearch,\n                     onChange: this.onChange\n                   };\n\n                   return (\n                     <>\n                       <div id=\"videocontainer\">\n                         <video\n                           muted\n                           autoPlay\n                           id=\"video\"\n                           loop\n                         >\n                           <source src={video} />\n                         </video>\n                       </div>\n                       <div className=\"hero\">\n                         <h1> MealTime </h1>\n                       </div>\n                       <About scroll={this.scroll} />\n                       <div\n                         className=\"hero\"\n                         id=\"selectionPage\"\n                         ref={this.searchPage}\n                       >\n                         <h1>MealTime</h1>\n                         <div className=\"selection\">\n                           <form action=\"#\">\n                             <select\n                               onChange={\n                                 this.handleChangeSelect\n                               }\n                               value={\n                                 this.state.selectedContinent\n                               }\n                               className=\"react-autosuggest__container\"\n                             >\n                               {Object.keys(\n                                 this.state.data\n                               ).map(continent => (\n                                 <option\n                                   value={continent}\n                                   className=\"react-autosuggest__input \"\n                                 >\n                                   {continent}\n                                 </option>\n                               ))}\n                             </select>\n                             <Autosuggest\n                               suggestions={suggestions}\n                               shouldRenderSuggestions={() =>\n                                 true\n                               }\n                               onSuggestionsFetchRequested={\n                                 this\n                                   .onSuggestionsFetchRequested\n                               }\n                               onSuggestionsClearRequested={\n                                 this\n                                   .onSuggestionsClearRequested\n                               }\n                               getSuggestionValue={\n                                 getSuggestionValue\n                               }\n                               renderSuggestion={\n                                 renderSuggestion\n                               }\n                               inputProps={inputProps}\n                             />\n                             <input\n                               type=\"submit\"\n                               value=\"submit\"\n                               onClick={this.handleSubmit}\n                               disabled={\n                                 !this.state.data[\n                                   this.state\n                                     .selectedContinent\n                                 ].includes(\n                                   this.state.citySearch\n                                 )\n                               }\n                             />\n                           </form>\n                         </div>\n                       </div>\n                       <div ref={this.searchResultsRef} >\n                         {this.state.city.length > 0 && (\n                           <div className=\"searchPage\">\n                             <ShowTime\n                               time={this.state.time}\n                               city={this.state.city}\n                               timeStamp={\n                                 this.state.timeStamp\n                               }\n                             />\n                             <Yelp\n                               city={this.state.city}\n                               getSelectionfromApi={\n                                 this.getSelectionfromApi\n                               }\n                               selection={\n                                 this.state.selection\n                               }\n                               lat={this.state.lat}\n                               lats={this.state.lat}\n                               lng={this.state.lat}\n                               center={this.state.center}\n                             />\n                           </div>\n                         )}\n                       </div>\n                     </>\n                   );\n                 }\n               }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}